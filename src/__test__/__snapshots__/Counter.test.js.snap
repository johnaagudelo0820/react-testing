// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Counter /> should render without errors 1`] = `
<Counter>
  <p>
    The Godfather
  </p>
  <WithStyles(ForwardRef(Autocomplete))
    getOptionLabel={[Function]}
    id="combo-box-demo"
    inputValue="The Godfather"
    name="tags"
    onChange={[Function]}
    options={
      Array [
        Object {
          "title": "The Shawshank Redemption",
          "year": 1994,
        },
        Object {
          "title": "The Godfather",
          "year": 1972,
        },
        Object {
          "title": "The Godfather: Part II",
          "year": 1974,
        },
        Object {
          "title": "The Dark Knight",
          "year": 2008,
        },
        Object {
          "title": "12 Angry Men",
          "year": 1957,
        },
        Object {
          "title": "Schindler's List",
          "year": 1993,
        },
        Object {
          "title": "Pulp Fiction",
          "year": 1994,
        },
        Object {
          "title": "The Lord of the Rings: The Return of the King",
          "year": 2003,
        },
        Object {
          "title": "The Good, the Bad and the Ugly",
          "year": 1966,
        },
        Object {
          "title": "Fight Club",
          "year": 1999,
        },
        Object {
          "title": "The Lord of the Rings: The Fellowship of the Ring",
          "year": 2001,
        },
        Object {
          "title": "Star Wars: Episode V - The Empire Strikes Back",
          "year": 1980,
        },
        Object {
          "title": "Forrest Gump",
          "year": 1994,
        },
        Object {
          "title": "Inception",
          "year": 2010,
        },
        Object {
          "title": "The Lord of the Rings: The Two Towers",
          "year": 2002,
        },
        Object {
          "title": "One Flew Over the Cuckoo's Nest",
          "year": 1975,
        },
        Object {
          "title": "Goodfellas",
          "year": 1990,
        },
        Object {
          "title": "The Matrix",
          "year": 1999,
        },
        Object {
          "title": "Seven Samurai",
          "year": 1954,
        },
        Object {
          "title": "Star Wars: Episode IV - A New Hope",
          "year": 1977,
        },
        Object {
          "title": "City of God",
          "year": 2002,
        },
        Object {
          "title": "Se7en",
          "year": 1995,
        },
        Object {
          "title": "The Silence of the Lambs",
          "year": 1991,
        },
        Object {
          "title": "It's a Wonderful Life",
          "year": 1946,
        },
        Object {
          "title": "Life Is Beautiful",
          "year": 1997,
        },
        Object {
          "title": "The Usual Suspects",
          "year": 1995,
        },
        Object {
          "title": "Léon: The Professional",
          "year": 1994,
        },
        Object {
          "title": "Spirited Away",
          "year": 2001,
        },
        Object {
          "title": "Saving Private Ryan",
          "year": 1998,
        },
        Object {
          "title": "Once Upon a Time in the West",
          "year": 1968,
        },
        Object {
          "title": "American History X",
          "year": 1998,
        },
        Object {
          "title": "Interstellar",
          "year": 2014,
        },
        Object {
          "title": "Casablanca",
          "year": 1942,
        },
        Object {
          "title": "City Lights",
          "year": 1931,
        },
        Object {
          "title": "Psycho",
          "year": 1960,
        },
        Object {
          "title": "The Green Mile",
          "year": 1999,
        },
        Object {
          "title": "The Intouchables",
          "year": 2011,
        },
        Object {
          "title": "Modern Times",
          "year": 1936,
        },
        Object {
          "title": "Raiders of the Lost Ark",
          "year": 1981,
        },
        Object {
          "title": "Rear Window",
          "year": 1954,
        },
        Object {
          "title": "The Pianist",
          "year": 2002,
        },
        Object {
          "title": "The Departed",
          "year": 2006,
        },
        Object {
          "title": "Terminator 2: Judgment Day",
          "year": 1991,
        },
        Object {
          "title": "Back to the Future",
          "year": 1985,
        },
        Object {
          "title": "Whiplash",
          "year": 2014,
        },
        Object {
          "title": "Gladiator",
          "year": 2000,
        },
        Object {
          "title": "Memento",
          "year": 2000,
        },
        Object {
          "title": "The Prestige",
          "year": 2006,
        },
        Object {
          "title": "The Lion King",
          "year": 1994,
        },
        Object {
          "title": "Apocalypse Now",
          "year": 1979,
        },
        Object {
          "title": "Alien",
          "year": 1979,
        },
        Object {
          "title": "Sunset Boulevard",
          "year": 1950,
        },
        Object {
          "title": "Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",
          "year": 1964,
        },
        Object {
          "title": "The Great Dictator",
          "year": 1940,
        },
        Object {
          "title": "Cinema Paradiso",
          "year": 1988,
        },
        Object {
          "title": "The Lives of Others",
          "year": 2006,
        },
        Object {
          "title": "Grave of the Fireflies",
          "year": 1988,
        },
        Object {
          "title": "Paths of Glory",
          "year": 1957,
        },
        Object {
          "title": "Django Unchained",
          "year": 2012,
        },
        Object {
          "title": "The Shining",
          "year": 1980,
        },
        Object {
          "title": "WALL·E",
          "year": 2008,
        },
        Object {
          "title": "American Beauty",
          "year": 1999,
        },
        Object {
          "title": "The Dark Knight Rises",
          "year": 2012,
        },
        Object {
          "title": "Princess Mononoke",
          "year": 1997,
        },
        Object {
          "title": "Aliens",
          "year": 1986,
        },
        Object {
          "title": "Oldboy",
          "year": 2003,
        },
        Object {
          "title": "Once Upon a Time in America",
          "year": 1984,
        },
        Object {
          "title": "Witness for the Prosecution",
          "year": 1957,
        },
        Object {
          "title": "Das Boot",
          "year": 1981,
        },
        Object {
          "title": "Citizen Kane",
          "year": 1941,
        },
        Object {
          "title": "North by Northwest",
          "year": 1959,
        },
        Object {
          "title": "Vertigo",
          "year": 1958,
        },
        Object {
          "title": "Star Wars: Episode VI - Return of the Jedi",
          "year": 1983,
        },
        Object {
          "title": "Reservoir Dogs",
          "year": 1992,
        },
        Object {
          "title": "Braveheart",
          "year": 1995,
        },
        Object {
          "title": "M",
          "year": 1931,
        },
        Object {
          "title": "Requiem for a Dream",
          "year": 2000,
        },
        Object {
          "title": "Amélie",
          "year": 2001,
        },
        Object {
          "title": "A Clockwork Orange",
          "year": 1971,
        },
        Object {
          "title": "Like Stars on Earth",
          "year": 2007,
        },
        Object {
          "title": "Taxi Driver",
          "year": 1976,
        },
        Object {
          "title": "Lawrence of Arabia",
          "year": 1962,
        },
        Object {
          "title": "Double Indemnity",
          "year": 1944,
        },
        Object {
          "title": "Eternal Sunshine of the Spotless Mind",
          "year": 2004,
        },
        Object {
          "title": "Amadeus",
          "year": 1984,
        },
        Object {
          "title": "To Kill a Mockingbird",
          "year": 1962,
        },
        Object {
          "title": "Toy Story 3",
          "year": 2010,
        },
        Object {
          "title": "Logan",
          "year": 2017,
        },
        Object {
          "title": "Full Metal Jacket",
          "year": 1987,
        },
        Object {
          "title": "Dangal",
          "year": 2016,
        },
        Object {
          "title": "The Sting",
          "year": 1973,
        },
        Object {
          "title": "2001: A Space Odyssey",
          "year": 1968,
        },
        Object {
          "title": "Singin' in the Rain",
          "year": 1952,
        },
        Object {
          "title": "Toy Story",
          "year": 1995,
        },
        Object {
          "title": "Bicycle Thieves",
          "year": 1948,
        },
        Object {
          "title": "The Kid",
          "year": 1921,
        },
        Object {
          "title": "Inglourious Basterds",
          "year": 2009,
        },
        Object {
          "title": "Snatch",
          "year": 2000,
        },
        Object {
          "title": "3 Idiots",
          "year": 2009,
        },
        Object {
          "title": "Monty Python and the Holy Grail",
          "year": 1975,
        },
      ]
    }
    renderInput={[Function]}
    style={
      Object {
        "width": 300,
      }
    }
  >
    <ForwardRef(Autocomplete)
      classes={
        Object {
          "clearIndicator": "MuiAutocomplete-clearIndicator",
          "clearIndicatorDirty": "MuiAutocomplete-clearIndicatorDirty",
          "endAdornment": "MuiAutocomplete-endAdornment",
          "focused": "Mui-focused",
          "groupLabel": "MuiAutocomplete-groupLabel",
          "groupUl": "MuiAutocomplete-groupUl",
          "hasClearIcon": "MuiAutocomplete-hasClearIcon",
          "hasPopupIcon": "MuiAutocomplete-hasPopupIcon",
          "input": "MuiAutocomplete-input",
          "inputFocused": "MuiAutocomplete-inputFocused",
          "inputRoot": "MuiAutocomplete-inputRoot",
          "listbox": "MuiAutocomplete-listbox",
          "loading": "MuiAutocomplete-loading",
          "noOptions": "MuiAutocomplete-noOptions",
          "option": "MuiAutocomplete-option",
          "paper": "MuiAutocomplete-paper",
          "popper": "MuiAutocomplete-popper",
          "popperDisablePortal": "MuiAutocomplete-popperDisablePortal",
          "popupIndicator": "MuiAutocomplete-popupIndicator",
          "popupIndicatorOpen": "MuiAutocomplete-popupIndicatorOpen",
          "root": "MuiAutocomplete-root",
          "tag": "MuiAutocomplete-tag",
          "tagSizeSmall": "MuiAutocomplete-tagSizeSmall",
        }
      }
      getOptionLabel={[Function]}
      id="combo-box-demo"
      inputValue="The Godfather"
      name="tags"
      onChange={[Function]}
      options={
        Array [
          Object {
            "title": "The Shawshank Redemption",
            "year": 1994,
          },
          Object {
            "title": "The Godfather",
            "year": 1972,
          },
          Object {
            "title": "The Godfather: Part II",
            "year": 1974,
          },
          Object {
            "title": "The Dark Knight",
            "year": 2008,
          },
          Object {
            "title": "12 Angry Men",
            "year": 1957,
          },
          Object {
            "title": "Schindler's List",
            "year": 1993,
          },
          Object {
            "title": "Pulp Fiction",
            "year": 1994,
          },
          Object {
            "title": "The Lord of the Rings: The Return of the King",
            "year": 2003,
          },
          Object {
            "title": "The Good, the Bad and the Ugly",
            "year": 1966,
          },
          Object {
            "title": "Fight Club",
            "year": 1999,
          },
          Object {
            "title": "The Lord of the Rings: The Fellowship of the Ring",
            "year": 2001,
          },
          Object {
            "title": "Star Wars: Episode V - The Empire Strikes Back",
            "year": 1980,
          },
          Object {
            "title": "Forrest Gump",
            "year": 1994,
          },
          Object {
            "title": "Inception",
            "year": 2010,
          },
          Object {
            "title": "The Lord of the Rings: The Two Towers",
            "year": 2002,
          },
          Object {
            "title": "One Flew Over the Cuckoo's Nest",
            "year": 1975,
          },
          Object {
            "title": "Goodfellas",
            "year": 1990,
          },
          Object {
            "title": "The Matrix",
            "year": 1999,
          },
          Object {
            "title": "Seven Samurai",
            "year": 1954,
          },
          Object {
            "title": "Star Wars: Episode IV - A New Hope",
            "year": 1977,
          },
          Object {
            "title": "City of God",
            "year": 2002,
          },
          Object {
            "title": "Se7en",
            "year": 1995,
          },
          Object {
            "title": "The Silence of the Lambs",
            "year": 1991,
          },
          Object {
            "title": "It's a Wonderful Life",
            "year": 1946,
          },
          Object {
            "title": "Life Is Beautiful",
            "year": 1997,
          },
          Object {
            "title": "The Usual Suspects",
            "year": 1995,
          },
          Object {
            "title": "Léon: The Professional",
            "year": 1994,
          },
          Object {
            "title": "Spirited Away",
            "year": 2001,
          },
          Object {
            "title": "Saving Private Ryan",
            "year": 1998,
          },
          Object {
            "title": "Once Upon a Time in the West",
            "year": 1968,
          },
          Object {
            "title": "American History X",
            "year": 1998,
          },
          Object {
            "title": "Interstellar",
            "year": 2014,
          },
          Object {
            "title": "Casablanca",
            "year": 1942,
          },
          Object {
            "title": "City Lights",
            "year": 1931,
          },
          Object {
            "title": "Psycho",
            "year": 1960,
          },
          Object {
            "title": "The Green Mile",
            "year": 1999,
          },
          Object {
            "title": "The Intouchables",
            "year": 2011,
          },
          Object {
            "title": "Modern Times",
            "year": 1936,
          },
          Object {
            "title": "Raiders of the Lost Ark",
            "year": 1981,
          },
          Object {
            "title": "Rear Window",
            "year": 1954,
          },
          Object {
            "title": "The Pianist",
            "year": 2002,
          },
          Object {
            "title": "The Departed",
            "year": 2006,
          },
          Object {
            "title": "Terminator 2: Judgment Day",
            "year": 1991,
          },
          Object {
            "title": "Back to the Future",
            "year": 1985,
          },
          Object {
            "title": "Whiplash",
            "year": 2014,
          },
          Object {
            "title": "Gladiator",
            "year": 2000,
          },
          Object {
            "title": "Memento",
            "year": 2000,
          },
          Object {
            "title": "The Prestige",
            "year": 2006,
          },
          Object {
            "title": "The Lion King",
            "year": 1994,
          },
          Object {
            "title": "Apocalypse Now",
            "year": 1979,
          },
          Object {
            "title": "Alien",
            "year": 1979,
          },
          Object {
            "title": "Sunset Boulevard",
            "year": 1950,
          },
          Object {
            "title": "Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",
            "year": 1964,
          },
          Object {
            "title": "The Great Dictator",
            "year": 1940,
          },
          Object {
            "title": "Cinema Paradiso",
            "year": 1988,
          },
          Object {
            "title": "The Lives of Others",
            "year": 2006,
          },
          Object {
            "title": "Grave of the Fireflies",
            "year": 1988,
          },
          Object {
            "title": "Paths of Glory",
            "year": 1957,
          },
          Object {
            "title": "Django Unchained",
            "year": 2012,
          },
          Object {
            "title": "The Shining",
            "year": 1980,
          },
          Object {
            "title": "WALL·E",
            "year": 2008,
          },
          Object {
            "title": "American Beauty",
            "year": 1999,
          },
          Object {
            "title": "The Dark Knight Rises",
            "year": 2012,
          },
          Object {
            "title": "Princess Mononoke",
            "year": 1997,
          },
          Object {
            "title": "Aliens",
            "year": 1986,
          },
          Object {
            "title": "Oldboy",
            "year": 2003,
          },
          Object {
            "title": "Once Upon a Time in America",
            "year": 1984,
          },
          Object {
            "title": "Witness for the Prosecution",
            "year": 1957,
          },
          Object {
            "title": "Das Boot",
            "year": 1981,
          },
          Object {
            "title": "Citizen Kane",
            "year": 1941,
          },
          Object {
            "title": "North by Northwest",
            "year": 1959,
          },
          Object {
            "title": "Vertigo",
            "year": 1958,
          },
          Object {
            "title": "Star Wars: Episode VI - Return of the Jedi",
            "year": 1983,
          },
          Object {
            "title": "Reservoir Dogs",
            "year": 1992,
          },
          Object {
            "title": "Braveheart",
            "year": 1995,
          },
          Object {
            "title": "M",
            "year": 1931,
          },
          Object {
            "title": "Requiem for a Dream",
            "year": 2000,
          },
          Object {
            "title": "Amélie",
            "year": 2001,
          },
          Object {
            "title": "A Clockwork Orange",
            "year": 1971,
          },
          Object {
            "title": "Like Stars on Earth",
            "year": 2007,
          },
          Object {
            "title": "Taxi Driver",
            "year": 1976,
          },
          Object {
            "title": "Lawrence of Arabia",
            "year": 1962,
          },
          Object {
            "title": "Double Indemnity",
            "year": 1944,
          },
          Object {
            "title": "Eternal Sunshine of the Spotless Mind",
            "year": 2004,
          },
          Object {
            "title": "Amadeus",
            "year": 1984,
          },
          Object {
            "title": "To Kill a Mockingbird",
            "year": 1962,
          },
          Object {
            "title": "Toy Story 3",
            "year": 2010,
          },
          Object {
            "title": "Logan",
            "year": 2017,
          },
          Object {
            "title": "Full Metal Jacket",
            "year": 1987,
          },
          Object {
            "title": "Dangal",
            "year": 2016,
          },
          Object {
            "title": "The Sting",
            "year": 1973,
          },
          Object {
            "title": "2001: A Space Odyssey",
            "year": 1968,
          },
          Object {
            "title": "Singin' in the Rain",
            "year": 1952,
          },
          Object {
            "title": "Toy Story",
            "year": 1995,
          },
          Object {
            "title": "Bicycle Thieves",
            "year": 1948,
          },
          Object {
            "title": "The Kid",
            "year": 1921,
          },
          Object {
            "title": "Inglourious Basterds",
            "year": 2009,
          },
          Object {
            "title": "Snatch",
            "year": 2000,
          },
          Object {
            "title": "3 Idiots",
            "year": 2009,
          },
          Object {
            "title": "Monty Python and the Holy Grail",
            "year": 1975,
          },
        ]
      }
      renderInput={[Function]}
      style={
        Object {
          "width": 300,
        }
      }
    >
      <div
        aria-expanded={false}
        aria-owns={null}
        className="MuiAutocomplete-root MuiAutocomplete-hasClearIcon MuiAutocomplete-hasPopupIcon"
        name="tags"
        onClick={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        role="combobox"
        style={
          Object {
            "width": 300,
          }
        }
      >
        <WithStyles(ForwardRef(TextField))
          InputLabelProps={
            Object {
              "htmlFor": "combo-box-demo",
              "id": "combo-box-demo-label",
            }
          }
          InputProps={
            Object {
              "className": "MuiAutocomplete-inputRoot",
              "endAdornment": <div
                className="MuiAutocomplete-endAdornment"
              >
                <ForwardRef(WithStyles)
                  aria-label="Clear"
                  className="MuiAutocomplete-clearIndicator"
                  onClick={[Function]}
                  tabIndex={-1}
                  title="Clear"
                >
                  <UNDEFINED
                    fontSize="small"
                  />
                </ForwardRef(WithStyles)>
                <ForwardRef(WithStyles)
                  aria-label="Open"
                  className="MuiAutocomplete-popupIndicator"
                  disabled={false}
                  onClick={[Function]}
                  tabIndex={-1}
                  title="Open"
                >
                  <UNDEFINED />
                </ForwardRef(WithStyles)>
              </div>,
              "ref": [MockFunction] {
                "calls": Array [
                  Array [
                    <div
                      class="MuiInputBase-root MuiOutlinedInput-root MuiAutocomplete-inputRoot MuiInputBase-fullWidth MuiInputBase-formControl MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd"
                    >
                      <input
                        aria-autocomplete="list"
                        aria-invalid="false"
                        autocapitalize="none"
                        autocomplete="off"
                        class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                        id="combo-box-demo"
                        spellcheck="false"
                        type="text"
                        value="The Godfather"
                      />
                      <div
                        class="MuiAutocomplete-endAdornment"
                      >
                        <button
                          aria-label="Clear"
                          class="MuiButtonBase-root MuiIconButton-root MuiAutocomplete-clearIndicator"
                          tabindex="-1"
                          title="Clear"
                          type="button"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <svg
                              aria-hidden="true"
                              class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                              focusable="false"
                              role="presentation"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                              />
                            </svg>
                          </span>
                        </button>
                        <button
                          aria-label="Open"
                          class="MuiButtonBase-root MuiIconButton-root MuiAutocomplete-popupIndicator"
                          tabindex="-1"
                          title="Open"
                          type="button"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <svg
                              aria-hidden="true"
                              class="MuiSvgIcon-root"
                              focusable="false"
                              role="presentation"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M7 10l5 5 5-5z"
                              />
                            </svg>
                          </span>
                        </button>
                      </div>
                      <fieldset
                        aria-hidden="true"
                        class="PrivateNotchedOutline-root-103 MuiOutlinedInput-notchedOutline"
                      >
                        <legend
                          class="PrivateNotchedOutline-legendLabelled-105 PrivateNotchedOutline-legendNotched-106"
                        >
                          <span>
                            Combo box
                          </span>
                        </legend>
                      </fieldset>
                    </div>,
                  ],
                  Array [
                    true,
                  ],
                  Array [
                    true,
                  ],
                  Array [
                    true,
                  ],
                  Array [
                    true,
                  ],
                  Array [
                    false,
                  ],
                  Array [
                    "mui-autocomplete-81525",
                  ],
                  Array [
                    "",
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              },
              "startAdornment": undefined,
            }
          }
          disabled={false}
          fullWidth={true}
          id="combo-box-demo"
          inputProps={
            Object {
              "aria-activedescendant": null,
              "aria-autocomplete": "list",
              "aria-controls": null,
              "autoCapitalize": "none",
              "autoComplete": "off",
              "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
              "disabled": false,
              "id": "combo-box-demo",
              "onBlur": [Function],
              "onChange": [Function],
              "onFocus": [Function],
              "onMouseDown": [Function],
              "ref": Object {
                "current": <input
                  aria-autocomplete="list"
                  aria-invalid="false"
                  autocapitalize="none"
                  autocomplete="off"
                  class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                  id="combo-box-demo"
                  spellcheck="false"
                  type="text"
                  value="The Godfather"
                />,
              },
              "spellCheck": "false",
              "value": "The Godfather",
            }
          }
          label="Combo box"
          variant="outlined"
        >
          <ForwardRef(TextField)
            InputLabelProps={
              Object {
                "htmlFor": "combo-box-demo",
                "id": "combo-box-demo-label",
              }
            }
            InputProps={
              Object {
                "className": "MuiAutocomplete-inputRoot",
                "endAdornment": <div
                  className="MuiAutocomplete-endAdornment"
                >
                  <ForwardRef(WithStyles)
                    aria-label="Clear"
                    className="MuiAutocomplete-clearIndicator"
                    onClick={[Function]}
                    tabIndex={-1}
                    title="Clear"
                  >
                    <UNDEFINED
                      fontSize="small"
                    />
                  </ForwardRef(WithStyles)>
                  <ForwardRef(WithStyles)
                    aria-label="Open"
                    className="MuiAutocomplete-popupIndicator"
                    disabled={false}
                    onClick={[Function]}
                    tabIndex={-1}
                    title="Open"
                  >
                    <UNDEFINED />
                  </ForwardRef(WithStyles)>
                </div>,
                "ref": [MockFunction] {
                  "calls": Array [
                    Array [
                      <div
                        class="MuiInputBase-root MuiOutlinedInput-root MuiAutocomplete-inputRoot MuiInputBase-fullWidth MuiInputBase-formControl MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd"
                      >
                        <input
                          aria-autocomplete="list"
                          aria-invalid="false"
                          autocapitalize="none"
                          autocomplete="off"
                          class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                          id="combo-box-demo"
                          spellcheck="false"
                          type="text"
                          value="The Godfather"
                        />
                        <div
                          class="MuiAutocomplete-endAdornment"
                        >
                          <button
                            aria-label="Clear"
                            class="MuiButtonBase-root MuiIconButton-root MuiAutocomplete-clearIndicator"
                            tabindex="-1"
                            title="Clear"
                            type="button"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <svg
                                aria-hidden="true"
                                class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                focusable="false"
                                role="presentation"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                />
                              </svg>
                            </span>
                          </button>
                          <button
                            aria-label="Open"
                            class="MuiButtonBase-root MuiIconButton-root MuiAutocomplete-popupIndicator"
                            tabindex="-1"
                            title="Open"
                            type="button"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <svg
                                aria-hidden="true"
                                class="MuiSvgIcon-root"
                                focusable="false"
                                role="presentation"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M7 10l5 5 5-5z"
                                />
                              </svg>
                            </span>
                          </button>
                        </div>
                        <fieldset
                          aria-hidden="true"
                          class="PrivateNotchedOutline-root-103 MuiOutlinedInput-notchedOutline"
                        >
                          <legend
                            class="PrivateNotchedOutline-legendLabelled-105 PrivateNotchedOutline-legendNotched-106"
                          >
                            <span>
                              Combo box
                            </span>
                          </legend>
                        </fieldset>
                      </div>,
                    ],
                    Array [
                      true,
                    ],
                    Array [
                      true,
                    ],
                    Array [
                      true,
                    ],
                    Array [
                      true,
                    ],
                    Array [
                      false,
                    ],
                    Array [
                      "mui-autocomplete-81525",
                    ],
                    Array [
                      "",
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                  ],
                },
                "startAdornment": undefined,
              }
            }
            classes={
              Object {
                "root": "MuiTextField-root",
              }
            }
            disabled={false}
            fullWidth={true}
            id="combo-box-demo"
            inputProps={
              Object {
                "aria-activedescendant": null,
                "aria-autocomplete": "list",
                "aria-controls": null,
                "autoCapitalize": "none",
                "autoComplete": "off",
                "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                "disabled": false,
                "id": "combo-box-demo",
                "onBlur": [Function],
                "onChange": [Function],
                "onFocus": [Function],
                "onMouseDown": [Function],
                "ref": Object {
                  "current": <input
                    aria-autocomplete="list"
                    aria-invalid="false"
                    autocapitalize="none"
                    autocomplete="off"
                    class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                    id="combo-box-demo"
                    spellcheck="false"
                    type="text"
                    value="The Godfather"
                  />,
                },
                "spellCheck": "false",
                "value": "The Godfather",
              }
            }
            label="Combo box"
            variant="outlined"
          >
            <WithStyles(ForwardRef(FormControl))
              className="MuiTextField-root"
              color="primary"
              disabled={false}
              error={false}
              fullWidth={true}
              required={false}
              variant="outlined"
            >
              <ForwardRef(FormControl)
                className="MuiTextField-root"
                classes={
                  Object {
                    "fullWidth": "MuiFormControl-fullWidth",
                    "marginDense": "MuiFormControl-marginDense",
                    "marginNormal": "MuiFormControl-marginNormal",
                    "root": "MuiFormControl-root",
                  }
                }
                color="primary"
                disabled={false}
                error={false}
                fullWidth={true}
                required={false}
                variant="outlined"
              >
                <div
                  className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                >
                  <WithStyles(ForwardRef(InputLabel))
                    htmlFor="combo-box-demo"
                    id="combo-box-demo-label"
                  >
                    <ForwardRef(InputLabel)
                      classes={
                        Object {
                          "animated": "MuiInputLabel-animated",
                          "asterisk": "MuiInputLabel-asterisk",
                          "disabled": "Mui-disabled",
                          "error": "Mui-error",
                          "filled": "MuiInputLabel-filled",
                          "focused": "Mui-focused",
                          "formControl": "MuiInputLabel-formControl",
                          "marginDense": "MuiInputLabel-marginDense",
                          "outlined": "MuiInputLabel-outlined",
                          "required": "Mui-required",
                          "root": "MuiInputLabel-root",
                          "shrink": "MuiInputLabel-shrink",
                        }
                      }
                      htmlFor="combo-box-demo"
                      id="combo-box-demo-label"
                    >
                      <WithStyles(ForwardRef(FormLabel))
                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined"
                        classes={
                          Object {
                            "asterisk": "MuiInputLabel-asterisk",
                            "disabled": "Mui-disabled",
                            "error": "Mui-error",
                            "focused": "Mui-focused",
                            "required": "Mui-required",
                          }
                        }
                        data-shrink={[Function]}
                        htmlFor="combo-box-demo"
                        id="combo-box-demo-label"
                      >
                        <ForwardRef(FormLabel)
                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined"
                          classes={
                            Object {
                              "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                              "colorSecondary": "MuiFormLabel-colorSecondary",
                              "disabled": "Mui-disabled Mui-disabled",
                              "error": "Mui-error Mui-error",
                              "filled": "MuiFormLabel-filled",
                              "focused": "Mui-focused Mui-focused",
                              "required": "Mui-required Mui-required",
                              "root": "MuiFormLabel-root",
                            }
                          }
                          data-shrink={[Function]}
                          htmlFor="combo-box-demo"
                          id="combo-box-demo-label"
                        >
                          <label
                            className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled"
                            data-shrink={[Function]}
                            htmlFor="combo-box-demo"
                            id="combo-box-demo-label"
                          >
                            Combo box
                          </label>
                        </ForwardRef(FormLabel)>
                      </WithStyles(ForwardRef(FormLabel))>
                    </ForwardRef(InputLabel)>
                  </WithStyles(ForwardRef(InputLabel))>
                  <WithStyles(ForwardRef(OutlinedInput))
                    autoFocus={false}
                    className="MuiAutocomplete-inputRoot"
                    endAdornment={
                      <div
                        className="MuiAutocomplete-endAdornment"
                      >
                        <ForwardRef(WithStyles)
                          aria-label="Clear"
                          className="MuiAutocomplete-clearIndicator"
                          onClick={[Function]}
                          tabIndex={-1}
                          title="Clear"
                        >
                          <UNDEFINED
                            fontSize="small"
                          />
                        </ForwardRef(WithStyles)>
                        <ForwardRef(WithStyles)
                          aria-label="Open"
                          className="MuiAutocomplete-popupIndicator"
                          disabled={false}
                          onClick={[Function]}
                          tabIndex={-1}
                          title="Open"
                        >
                          <UNDEFINED />
                        </ForwardRef(WithStyles)>
                      </div>
                    }
                    fullWidth={true}
                    id="combo-box-demo"
                    inputProps={
                      Object {
                        "aria-activedescendant": null,
                        "aria-autocomplete": "list",
                        "aria-controls": null,
                        "autoCapitalize": "none",
                        "autoComplete": "off",
                        "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                        "disabled": false,
                        "id": "combo-box-demo",
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onFocus": [Function],
                        "onMouseDown": [Function],
                        "ref": Object {
                          "current": <input
                            aria-autocomplete="list"
                            aria-invalid="false"
                            autocapitalize="none"
                            autocomplete="off"
                            class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                            id="combo-box-demo"
                            spellcheck="false"
                            type="text"
                            value="The Godfather"
                          />,
                        },
                        "spellCheck": "false",
                        "value": "The Godfather",
                      }
                    }
                    label={
                      <React.Fragment>
                        Combo box
                      </React.Fragment>
                    }
                    multiline={false}
                  >
                    <ForwardRef(OutlinedInput)
                      autoFocus={false}
                      className="MuiAutocomplete-inputRoot"
                      classes={
                        Object {
                          "adornedEnd": "MuiOutlinedInput-adornedEnd",
                          "adornedStart": "MuiOutlinedInput-adornedStart",
                          "colorSecondary": "MuiOutlinedInput-colorSecondary",
                          "disabled": "Mui-disabled",
                          "error": "Mui-error",
                          "focused": "Mui-focused",
                          "input": "MuiOutlinedInput-input",
                          "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                          "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                          "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                          "inputMultiline": "MuiOutlinedInput-inputMultiline",
                          "marginDense": "MuiOutlinedInput-marginDense",
                          "multiline": "MuiOutlinedInput-multiline",
                          "notchedOutline": "MuiOutlinedInput-notchedOutline",
                          "root": "MuiOutlinedInput-root",
                        }
                      }
                      endAdornment={
                        <div
                          className="MuiAutocomplete-endAdornment"
                        >
                          <ForwardRef(WithStyles)
                            aria-label="Clear"
                            className="MuiAutocomplete-clearIndicator"
                            onClick={[Function]}
                            tabIndex={-1}
                            title="Clear"
                          >
                            <UNDEFINED
                              fontSize="small"
                            />
                          </ForwardRef(WithStyles)>
                          <ForwardRef(WithStyles)
                            aria-label="Open"
                            className="MuiAutocomplete-popupIndicator"
                            disabled={false}
                            onClick={[Function]}
                            tabIndex={-1}
                            title="Open"
                          >
                            <UNDEFINED />
                          </ForwardRef(WithStyles)>
                        </div>
                      }
                      fullWidth={true}
                      id="combo-box-demo"
                      inputProps={
                        Object {
                          "aria-activedescendant": null,
                          "aria-autocomplete": "list",
                          "aria-controls": null,
                          "autoCapitalize": "none",
                          "autoComplete": "off",
                          "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                          "disabled": false,
                          "id": "combo-box-demo",
                          "onBlur": [Function],
                          "onChange": [Function],
                          "onFocus": [Function],
                          "onMouseDown": [Function],
                          "ref": Object {
                            "current": <input
                              aria-autocomplete="list"
                              aria-invalid="false"
                              autocapitalize="none"
                              autocomplete="off"
                              class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                              id="combo-box-demo"
                              spellcheck="false"
                              type="text"
                              value="The Godfather"
                            />,
                          },
                          "spellCheck": "false",
                          "value": "The Godfather",
                        }
                      }
                      label={
                        <React.Fragment>
                          Combo box
                        </React.Fragment>
                      }
                      multiline={false}
                    >
                      <WithStyles(ForwardRef(InputBase))
                        autoFocus={false}
                        className="MuiAutocomplete-inputRoot"
                        classes={
                          Object {
                            "adornedEnd": "MuiOutlinedInput-adornedEnd",
                            "adornedStart": "MuiOutlinedInput-adornedStart",
                            "colorSecondary": "MuiOutlinedInput-colorSecondary",
                            "disabled": "Mui-disabled",
                            "error": "Mui-error",
                            "focused": "Mui-focused",
                            "input": "MuiOutlinedInput-input",
                            "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                            "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                            "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                            "inputMultiline": "MuiOutlinedInput-inputMultiline",
                            "marginDense": "MuiOutlinedInput-marginDense",
                            "multiline": "MuiOutlinedInput-multiline",
                            "notchedOutline": null,
                            "root": "MuiOutlinedInput-root",
                          }
                        }
                        endAdornment={
                          <div
                            className="MuiAutocomplete-endAdornment"
                          >
                            <ForwardRef(WithStyles)
                              aria-label="Clear"
                              className="MuiAutocomplete-clearIndicator"
                              onClick={[Function]}
                              tabIndex={-1}
                              title="Clear"
                            >
                              <UNDEFINED
                                fontSize="small"
                              />
                            </ForwardRef(WithStyles)>
                            <ForwardRef(WithStyles)
                              aria-label="Open"
                              className="MuiAutocomplete-popupIndicator"
                              disabled={false}
                              onClick={[Function]}
                              tabIndex={-1}
                              title="Open"
                            >
                              <UNDEFINED />
                            </ForwardRef(WithStyles)>
                          </div>
                        }
                        fullWidth={true}
                        id="combo-box-demo"
                        inputComponent="input"
                        inputProps={
                          Object {
                            "aria-activedescendant": null,
                            "aria-autocomplete": "list",
                            "aria-controls": null,
                            "autoCapitalize": "none",
                            "autoComplete": "off",
                            "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                            "disabled": false,
                            "id": "combo-box-demo",
                            "onBlur": [Function],
                            "onChange": [Function],
                            "onFocus": [Function],
                            "onMouseDown": [Function],
                            "ref": Object {
                              "current": <input
                                aria-autocomplete="list"
                                aria-invalid="false"
                                autocapitalize="none"
                                autocomplete="off"
                                class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                id="combo-box-demo"
                                spellcheck="false"
                                type="text"
                                value="The Godfather"
                              />,
                            },
                            "spellCheck": "false",
                            "value": "The Godfather",
                          }
                        }
                        multiline={false}
                        renderSuffix={[Function]}
                        type="text"
                      >
                        <ForwardRef(InputBase)
                          autoFocus={false}
                          className="MuiAutocomplete-inputRoot"
                          classes={
                            Object {
                              "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                              "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                              "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                              "disabled": "Mui-disabled Mui-disabled",
                              "error": "Mui-error Mui-error",
                              "focused": "Mui-focused Mui-focused",
                              "formControl": "MuiInputBase-formControl",
                              "fullWidth": "MuiInputBase-fullWidth",
                              "input": "MuiInputBase-input MuiOutlinedInput-input",
                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                              "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                              "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                              "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                              "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                              "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                              "root": "MuiInputBase-root MuiOutlinedInput-root",
                            }
                          }
                          endAdornment={
                            <div
                              className="MuiAutocomplete-endAdornment"
                            >
                              <ForwardRef(WithStyles)
                                aria-label="Clear"
                                className="MuiAutocomplete-clearIndicator"
                                onClick={[Function]}
                                tabIndex={-1}
                                title="Clear"
                              >
                                <UNDEFINED
                                  fontSize="small"
                                />
                              </ForwardRef(WithStyles)>
                              <ForwardRef(WithStyles)
                                aria-label="Open"
                                className="MuiAutocomplete-popupIndicator"
                                disabled={false}
                                onClick={[Function]}
                                tabIndex={-1}
                                title="Open"
                              >
                                <UNDEFINED />
                              </ForwardRef(WithStyles)>
                            </div>
                          }
                          fullWidth={true}
                          id="combo-box-demo"
                          inputComponent="input"
                          inputProps={
                            Object {
                              "aria-activedescendant": null,
                              "aria-autocomplete": "list",
                              "aria-controls": null,
                              "autoCapitalize": "none",
                              "autoComplete": "off",
                              "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                              "disabled": false,
                              "id": "combo-box-demo",
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onFocus": [Function],
                              "onMouseDown": [Function],
                              "ref": Object {
                                "current": <input
                                  aria-autocomplete="list"
                                  aria-invalid="false"
                                  autocapitalize="none"
                                  autocomplete="off"
                                  class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                  id="combo-box-demo"
                                  spellcheck="false"
                                  type="text"
                                  value="The Godfather"
                                />,
                              },
                              "spellCheck": "false",
                              "value": "The Godfather",
                            }
                          }
                          multiline={false}
                          renderSuffix={[Function]}
                          type="text"
                        >
                          <div
                            className="MuiInputBase-root MuiOutlinedInput-root MuiAutocomplete-inputRoot MuiInputBase-fullWidth MuiInputBase-formControl MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd"
                            onClick={[Function]}
                          >
                            <input
                              aria-activedescendant={null}
                              aria-autocomplete="list"
                              aria-controls={null}
                              aria-invalid={false}
                              autoCapitalize="none"
                              autoComplete="off"
                              autoFocus={false}
                              className="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                              disabled={false}
                              id="combo-box-demo"
                              onAnimationStart={[Function]}
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              onMouseDown={[Function]}
                              required={false}
                              spellCheck="false"
                              type="text"
                              value="The Godfather"
                            />
                            <div
                              className="MuiAutocomplete-endAdornment"
                            >
                              <WithStyles(ForwardRef(IconButton))
                                aria-label="Clear"
                                className="MuiAutocomplete-clearIndicator"
                                onClick={[Function]}
                                tabIndex={-1}
                                title="Clear"
                              >
                                <ForwardRef(IconButton)
                                  aria-label="Clear"
                                  className="MuiAutocomplete-clearIndicator"
                                  classes={
                                    Object {
                                      "colorInherit": "MuiIconButton-colorInherit",
                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                      "edgeStart": "MuiIconButton-edgeStart",
                                      "label": "MuiIconButton-label",
                                      "root": "MuiIconButton-root",
                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                    }
                                  }
                                  onClick={[Function]}
                                  tabIndex={-1}
                                  title="Clear"
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-label="Clear"
                                    centerRipple={true}
                                    className="MuiIconButton-root MuiAutocomplete-clearIndicator"
                                    disabled={false}
                                    focusRipple={true}
                                    onClick={[Function]}
                                    tabIndex={-1}
                                    title="Clear"
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-label="Clear"
                                      centerRipple={true}
                                      className="MuiIconButton-root MuiAutocomplete-clearIndicator"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                      tabIndex={-1}
                                      title="Clear"
                                    >
                                      <button
                                        aria-label="Clear"
                                        className="MuiButtonBase-root MuiIconButton-root MuiAutocomplete-clearIndicator"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={-1}
                                        title="Clear"
                                        type="button"
                                      >
                                        <span
                                          className="MuiIconButton-label"
                                        >
                                          <ForwardRef
                                            fontSize="small"
                                          >
                                            <WithStyles(ForwardRef(SvgIcon))
                                              fontSize="small"
                                            >
                                              <ForwardRef(SvgIcon)
                                                classes={
                                                  Object {
                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                    "colorError": "MuiSvgIcon-colorError",
                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                    "root": "MuiSvgIcon-root",
                                                  }
                                                }
                                                fontSize="small"
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                  focusable="false"
                                                  role="presentation"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                  />
                                                </svg>
                                              </ForwardRef(SvgIcon)>
                                            </WithStyles(ForwardRef(SvgIcon))>
                                          </ForwardRef>
                                        </span>
                                        <NoSsr />
                                      </button>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(IconButton)>
                              </WithStyles(ForwardRef(IconButton))>
                              <WithStyles(ForwardRef(IconButton))
                                aria-label="Open"
                                className="MuiAutocomplete-popupIndicator"
                                disabled={false}
                                onClick={[Function]}
                                tabIndex={-1}
                                title="Open"
                              >
                                <ForwardRef(IconButton)
                                  aria-label="Open"
                                  className="MuiAutocomplete-popupIndicator"
                                  classes={
                                    Object {
                                      "colorInherit": "MuiIconButton-colorInherit",
                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                      "edgeStart": "MuiIconButton-edgeStart",
                                      "label": "MuiIconButton-label",
                                      "root": "MuiIconButton-root",
                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                    }
                                  }
                                  disabled={false}
                                  onClick={[Function]}
                                  tabIndex={-1}
                                  title="Open"
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-label="Open"
                                    centerRipple={true}
                                    className="MuiIconButton-root MuiAutocomplete-popupIndicator"
                                    disabled={false}
                                    focusRipple={true}
                                    onClick={[Function]}
                                    tabIndex={-1}
                                    title="Open"
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-label="Open"
                                      centerRipple={true}
                                      className="MuiIconButton-root MuiAutocomplete-popupIndicator"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                      tabIndex={-1}
                                      title="Open"
                                    >
                                      <button
                                        aria-label="Open"
                                        className="MuiButtonBase-root MuiIconButton-root MuiAutocomplete-popupIndicator"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={-1}
                                        title="Open"
                                        type="button"
                                      >
                                        <span
                                          className="MuiIconButton-label"
                                        >
                                          <ForwardRef>
                                            <WithStyles(ForwardRef(SvgIcon))>
                                              <ForwardRef(SvgIcon)
                                                classes={
                                                  Object {
                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                    "colorError": "MuiSvgIcon-colorError",
                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                    "root": "MuiSvgIcon-root",
                                                  }
                                                }
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  className="MuiSvgIcon-root"
                                                  focusable="false"
                                                  role="presentation"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M7 10l5 5 5-5z"
                                                  />
                                                </svg>
                                              </ForwardRef(SvgIcon)>
                                            </WithStyles(ForwardRef(SvgIcon))>
                                          </ForwardRef>
                                        </span>
                                        <NoSsr />
                                      </button>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(IconButton)>
                              </WithStyles(ForwardRef(IconButton))>
                            </div>
                            <WithStyles(ForwardRef(NotchedOutline))
                              className="MuiOutlinedInput-notchedOutline"
                              label={
                                <React.Fragment>
                                  Combo box
                                </React.Fragment>
                              }
                              labelWidth={0}
                              notched={true}
                            >
                              <ForwardRef(NotchedOutline)
                                className="MuiOutlinedInput-notchedOutline"
                                classes={
                                  Object {
                                    "legend": "PrivateNotchedOutline-legend-104",
                                    "legendLabelled": "PrivateNotchedOutline-legendLabelled-105",
                                    "legendNotched": "PrivateNotchedOutline-legendNotched-106",
                                    "root": "PrivateNotchedOutline-root-103",
                                  }
                                }
                                label={
                                  <React.Fragment>
                                    Combo box
                                  </React.Fragment>
                                }
                                labelWidth={0}
                                notched={true}
                              >
                                <fieldset
                                  aria-hidden={true}
                                  className="PrivateNotchedOutline-root-103 MuiOutlinedInput-notchedOutline"
                                >
                                  <legend
                                    className="PrivateNotchedOutline-legendLabelled-105 PrivateNotchedOutline-legendNotched-106"
                                  >
                                    <span>
                                      Combo box
                                    </span>
                                  </legend>
                                </fieldset>
                              </ForwardRef(NotchedOutline)>
                            </WithStyles(ForwardRef(NotchedOutline))>
                          </div>
                        </ForwardRef(InputBase)>
                      </WithStyles(ForwardRef(InputBase))>
                    </ForwardRef(OutlinedInput)>
                  </WithStyles(ForwardRef(OutlinedInput))>
                </div>
              </ForwardRef(FormControl)>
            </WithStyles(ForwardRef(FormControl))>
          </ForwardRef(TextField)>
        </WithStyles(ForwardRef(TextField))>
      </div>
    </ForwardRef(Autocomplete)>
  </WithStyles(ForwardRef(Autocomplete))>
</Counter>
`;
